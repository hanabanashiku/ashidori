name: Deploy

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      new_tag: ${{steps.tag_version.outputs.new_tag}}

    steps:
      - uses: actions/checkout@v3

      - name: Setup node environment
        uses: actions/setup-node@v3
        with:
          node-version: "17.9.0"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build-all

      - name: Run unit tests
        run: npm run cover

      - name: Upload coverage report
        uses: codecov/codecov-action@v2.1.0
        with:
          name: Production
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/clover.xml,./coverage/coverage-final.json,./coverage/lcov.info
          flags: unittests
          verbose: true

      - name: Create tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: false

      - name: Bump manifest version
        env:
          tag: ${{steps.tag_version.outputs.new_version}}
        run: |
          sed -i -e 's/"version":"[^"]*"/"version": "'$tag'"/' dist/crx/manifest.json
          sed -i -e 's/"version":"[^"]*"/"version": "'$tag'"/' dist/xpi/manifest.json

      - name: Package distribution
        run: |
          (cd dist/crx; zip ../../dist.crx -r *) & \
          (cd dist/xpi; zip ../../dist.xpi -r *)

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: |
            dist.crx
            dist.xpi
          if-no-files-found: error

  create-release:
    if: needs.build.outputs.new_tag
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: packages

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist.crx
            dist.xpi
          tag_name: ${{needs.build.outputs.new_tag}}
          prerelease: false
          draft: false
          generate_release_notes: true
          fail_on_unmatched_files: true

      - name: Publish to Chrome Store
        uses: trmcnvn/chrome-addon@v2
        with:
          extension: ${{secrets.CHROME_APP_ID}}
          zip: "./dist.crx"
          client-id: ${{secrets.CHROME_CLIENT_ID}}
          client-secret: ${{secrets.CHROME_CLIENT_SECRET}}
          refresh-token: ${{secrets.CHROME_REFRESH_TOKEN}}

      - name: Get firefox manifest
        run: unzip dist.xpi -d xpi

      - name: Publish to Firefox Store
        uses: trmcnvn/firefox-addon@v1
        with:
          uuid: ${{secrets.FIREFOX_UUID}}
          xpi: "./dist.xpi"
          manifest: "./xpi/manifest.json"
          api-key: ${{secrets.FIREFOX_API_KEY}}
          api-secret: ${{secrets.FIREFOX_API_SECRET}}
